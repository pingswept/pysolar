#!/usr/bin/python3
#+
# This script retrieves the Delta-T data from the USNO and outputs it
# in a form that can be included in a Python program.
#
# Copyright 2014 Lawrence D'Oliveiro <ldo@geek-central.gen.nz>.
#
#    This file is part of Pysolar.
#
#    Pysolar is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 3 of the License, or
#    (at your option) any later version.
#
#    Pysolar is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with Pysolar. If not, see <http://www.gnu.org/licenses/>.
#-
"""
Module docstring here
"""

import sys
import re
import urllib.request

if len(sys.argv) == 2:
    DATA = open(sys.argv[1], "r").read()
else:
    DATA = urllib.request.urlopen(
        "ftp://maia.usno.navy.mil/ser7/deltat.data").read().decode("ascii")
#end if

def parse_data(data):
    """
    docstring here
    """
    for line in data.split("\n"):
        line = line.strip()
        if len(line) != 0:
            year, month, day, dtt = tuple(
                (int, float)[i == 3](s) for i, s in enumerate(re.split(r"\s+", line, 3)))
            yield(year, month, day, dtt)
        #end if
    #end for
#end parse_data

ENTRIES = parse_data(DATA)
LAST_YEAR = None
LAST_MONTH = None
while True:
    ENTRY = next(ENTRIES, None)
    if ENTRY != None:
        YEAR, MONTH, DAY, DTT = ENTRY
        assert DAY == 1, "not first day of month for year %d, month %d" % (YEAR, MONTH)
    #end if
    if ENTRY is None or YEAR != LAST_YEAR:
        if LAST_YEAR != None:
            sys.stdout.write("        ],\n")
            if ENTRY is None:
                sys.stdout.write("    ] # delta_t\n")
            #end if
        #end if
        if ENTRY is None:
            break
        assert (
            LAST_YEAR is None or LAST_YEAR + 1 == YEAR), (
                "years not consecutive: %d, %d" % (LAST_YEAR, YEAR))
        if LAST_YEAR is None:
            sys.stdout.write("# table generated by util/get_delta_t script\n")
            sys.stdout.write("delta_t_base_year = %d\n" % YEAR)
            sys.stdout.write("delta_t_base_month = %d\n" % MONTH)
            sys.stdout.write("delta_t = \\\n  [\n")
        else:
            assert LAST_MONTH == 12, "incomplete year %d at month %d" % (LAST_YEAR, LAST_MONTH)
        #end if
        sys.stdout.write("        [ # %d\n" % YEAR)
        if LAST_YEAR != None:
            LAST_MONTH = 0
        else:
            LAST_MONTH = None # table might not start in January
        #end if
        LAST_YEAR = YEAR
    #end if
    assert LAST_MONTH is None or MONTH == LAST_MONTH + 1, \
        "months not consecutive for year %d: %d, %d"% (YEAR, LAST_MONTH, MONTH)
    sys.stdout.write("            %.4f, # %d\n" % (DTT, MONTH))
    LAST_MONTH = MONTH
#end while
